{"remainingRequest":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto-detail.tsx","dependencies":[{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto-detail.tsx","mtime":1660603226489},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './auto.reducer';\r\nvar AutoDetail = /** @class */ (function (_super) {\r\n    tslib_1.__extends(AutoDetail, _super);\r\n    function AutoDetail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    AutoDetail.prototype.componentDidMount = function () {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    };\r\n    AutoDetail.prototype.render = function () {\r\n        var autoEntity = this.props.autoEntity;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"concesionarioApp.auto.detail.title\" }, \"Auto\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, autoEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"Modelo\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Modelo\" }, \"Modelo\"))),\r\n                    React.createElement(\"dd\", null, autoEntity.Modelo),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"Foto\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Foto\" }, \"Foto\"))),\r\n                    React.createElement(\"dd\", null, autoEntity.Foto),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"Precio\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Precio\" }, \"Precio\"))),\r\n                    React.createElement(\"dd\", null, autoEntity.Precio),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(\"span\", { id: \"Descripcion\" },\r\n                            React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Descripcion\" }, \"Descripcion\"))),\r\n                    React.createElement(\"dd\", null, autoEntity.Descripcion),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"concesionarioApp.auto.marca\" }, \"Marca\")),\r\n                    React.createElement(\"dd\", null, (autoEntity.marca) ? autoEntity.marca.Nombre : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/auto\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: \"/entity/auto/\" + autoEntity.id + \"/edit\", replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    \" \",\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    };\r\n    return AutoDetail;\r\n}(React.Component));\r\nexport { AutoDetail };\r\nvar mapStateToProps = function (_a) {\r\n    var auto = _a.auto;\r\n    return ({\r\n        autoEntity: auto.entity\r\n    });\r\n};\r\nvar mapDispatchToProps = { getEntity: getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoDetail);\r\n",{"version":3,"file":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto-detail.tsx","sourceRoot":"","sources":["C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto-detail.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Row, Col } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport {\n  Translate,\n  ICrudGetAction,\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntity } from './auto.reducer';\nimport { IAuto } from 'app/shared/model/auto.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IAutoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{id: string}>  {}\n\nexport class AutoDetail extends React.Component<IAutoDetailProps> {\n\n  componentDidMount() {\n    this.props.getEntity(this.props.match.params.id);\n  }\n\n  render() {\n    const { autoEntity } = this.props;\n    return (\n      <Row>\n        <Col md=\"8\">\n          <h2>\n            <Translate contentKey=\"concesionarioApp.auto.detail.title\">Auto</Translate> [<b>{autoEntity.id}</b>]\n          </h2>\n            <dl className=\"jh-entity-details\">\n              <dt>\n                <span id=\"Modelo\">\n                  <Translate contentKey=\"concesionarioApp.auto.Modelo\">\n                    Modelo\n                  </Translate>\n                </span>\n              </dt>\n              <dd>\n              {autoEntity.Modelo}\n              </dd>\n              <dt>\n                <span id=\"Foto\">\n                  <Translate contentKey=\"concesionarioApp.auto.Foto\">\n                    Foto\n                  </Translate>\n                </span>\n              </dt>\n              <dd>\n              {autoEntity.Foto}\n              </dd>\n              <dt>\n                <span id=\"Precio\">\n                  <Translate contentKey=\"concesionarioApp.auto.Precio\">\n                    Precio\n                  </Translate>\n                </span>\n              </dt>\n              <dd>\n              {autoEntity.Precio}\n              </dd>\n              <dt>\n                <span id=\"Descripcion\">\n                  <Translate contentKey=\"concesionarioApp.auto.Descripcion\">\n                    Descripcion\n                  </Translate>\n                </span>\n              </dt>\n              <dd>\n              {autoEntity.Descripcion}\n              </dd>\n              <dt>\n                <Translate contentKey=\"concesionarioApp.auto.marca\">\n                  Marca\n                </Translate>\n              </dt>\n              <dd>\n                  {(autoEntity.marca) ? autoEntity.marca.Nombre : ''}\n              </dd>\n            </dl>\n          <Button tag={Link} to=\"/entity/auto\" replace color=\"info\">\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\" ><Translate contentKey=\"entity.action.back\">Back</Translate></span>\n          </Button>&nbsp;\n          <Button tag={Link} to={`/entity/auto/${autoEntity.id}/edit`} replace color=\"primary\">\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\"><Translate contentKey=\"entity.action.edit\">Edit</Translate></span>\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auto }: IRootState) => ({\n    autoEntity: auto.entity\n});\n\nconst mapDispatchToProps = { getEntity };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AutoDetail);\n"]}]}