{"remainingRequest":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.tsx","dependencies":[{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.tsx","mtime":1660603226808},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities } from './auto.reducer';\r\nvar Auto = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Auto, _super);\r\n    function Auto() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Auto.prototype.componentDidMount = function () {\r\n        this.props.getEntities();\r\n    };\r\n    Auto.prototype.render = function () {\r\n        var _a = this.props, autoList = _a.autoList, match = _a.match;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { id: \"auto-heading\" },\r\n                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.home.title\" }, \"Autoes\"),\r\n                React.createElement(Link, { to: match.url + \"/new\", className: \"btn btn-primary float-right jh-create-entity\", id: \"jh-create-entity\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"plus\" }),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Translate, { contentKey: \"concesionarioApp.auto.home.createLabel\" }, \"Create new Auto\"))),\r\n            React.createElement(\"div\", { className: \"table-responsive\" },\r\n                React.createElement(Table, { responsive: true },\r\n                    React.createElement(\"thead\", null,\r\n                        React.createElement(\"tr\", null,\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Modelo\" }, \"Modelo\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Foto\" }, \"Foto\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Precio\" }, \"Precio\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.Descripcion\" }, \"Descripcion\")),\r\n                            React.createElement(\"th\", null,\r\n                                React.createElement(Translate, { contentKey: \"concesionarioApp.auto.marca\" }, \"Marca\")),\r\n                            React.createElement(\"th\", null))),\r\n                    React.createElement(\"tbody\", null, autoList.map(function (auto, i) { return (React.createElement(\"tr\", { key: \"entity-\" + i },\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(Button, { tag: Link, to: match.url + \"/\" + auto.id, color: \"link\", size: \"sm\" }, auto.id)),\r\n                        React.createElement(\"td\", null, auto.Modelo),\r\n                        React.createElement(\"td\", null, auto.Foto),\r\n                        React.createElement(\"td\", null, auto.Precio),\r\n                        React.createElement(\"td\", null, auto.Descripcion),\r\n                        React.createElement(\"td\", null, auto.marca ?\r\n                            React.createElement(Link, { to: \"marca/\" + auto.marca.id }, auto.marca.Nombre) : ''),\r\n                        React.createElement(\"td\", { className: \"text-right\" },\r\n                            React.createElement(\"div\", { className: \"btn-group flex-btn-group-container\" },\r\n                                React.createElement(Button, { tag: Link, to: match.url + \"/\" + auto.id, color: \"info\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"eye\" }),\r\n                                    \" \",\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.view\" }, \"View\"))),\r\n                                React.createElement(Button, { tag: Link, to: match.url + \"/\" + auto.id + \"/edit\", color: \"primary\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                                    \" \",\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))),\r\n                                React.createElement(Button, { tag: Link, to: match.url + \"/\" + auto.id + \"/delete\", color: \"danger\", size: \"sm\" },\r\n                                    React.createElement(FontAwesomeIcon, { icon: \"trash\" }),\r\n                                    \" \",\r\n                                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                                        React.createElement(Translate, { contentKey: \"entity.action.delete\" }, \"Delete\"))))))); }))))));\r\n    };\r\n    return Auto;\r\n}(React.Component));\r\nexport { Auto };\r\nvar mapStateToProps = function (_a) {\r\n    var auto = _a.auto;\r\n    return ({\r\n        autoList: auto.entities,\r\n    });\r\n};\r\nvar mapDispatchToProps = {\r\n    getEntities: getEntities,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auto);\r\n",{"version":3,"file":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.tsx","sourceRoot":"","sources":["C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport {\n  Translate,\n  ICrudGetAllAction\n} from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport {\n  getEntities\n} from './auto.reducer';\nimport { IAuto } from 'app/shared/model/auto.model';\n // tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\n\nexport interface IAutoProps extends StateProps, DispatchProps, RouteComponentProps<{url: string}> {}\n\n\nexport class Auto extends React.Component<IAutoProps> {\n\n  componentDidMount() {\n    this.props.getEntities();\n  }\n\n\n\n\n\n  render() {\n    const { autoList, match} = this.props;\n    return (\n      <div>\n        <h2 id=\"auto-heading\">\n          <Translate contentKey=\"concesionarioApp.auto.home.title\">Autoes</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />&nbsp;\n            <Translate contentKey=\"concesionarioApp.auto.home.createLabel\">\n              Create new Auto\n            </Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th><Translate contentKey=\"global.field.id\">ID</Translate></th>\n                <th><Translate contentKey=\"concesionarioApp.auto.Modelo\">Modelo</Translate></th>\n                <th><Translate contentKey=\"concesionarioApp.auto.Foto\">Foto</Translate></th>\n                <th><Translate contentKey=\"concesionarioApp.auto.Precio\">Precio</Translate></th>\n                <th><Translate contentKey=\"concesionarioApp.auto.Descripcion\">Descripcion</Translate></th>\n                <th><Translate contentKey=\"concesionarioApp.auto.marca\">Marca</Translate></th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {\n                autoList.map((auto, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${auto.id}`} color=\"link\" size=\"sm\">\n                      {auto.id}\n                    </Button>\n                  </td>\n                  <td>\n                    {auto.Modelo}\n                  </td>\n                  <td>\n                    {auto.Foto}\n                  </td>\n                  <td>\n                    {auto.Precio}\n                  </td>\n                  <td>\n                    {auto.Descripcion}\n                  </td>\n                  <td>\n                      {auto.marca ?\n                      <Link to={`marca/${auto.marca.id}`}>\n                        {auto.marca.Nombre}\n                      </Link> : ''}\n                    </td>\n                    <td className=\"text-right\">\n                      <div className=\"btn-group flex-btn-group-container\">\n                        <Button tag={Link} to={`${match.url}/${auto.id}`} color=\"info\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\" ><Translate contentKey=\"entity.action.view\">View</Translate></span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${auto.id}/edit`} color=\"primary\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\"><Translate contentKey=\"entity.action.edit\">Edit</Translate></span>\n                        </Button>\n                        <Button tag={Link} to={`${match.url}/${auto.id}/delete`} color=\"danger\" size=\"sm\">\n                          <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\"><Translate contentKey=\"entity.action.delete\">Delete</Translate></span>\n                        </Button>\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              }\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auto }: IRootState) => ({\n  autoList: auto.entities,\n});\n\nconst mapDispatchToProps = {\n getEntities,\n};\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auto);\n"]}]}