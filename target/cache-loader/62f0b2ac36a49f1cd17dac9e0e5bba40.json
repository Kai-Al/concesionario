{"remainingRequest":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.reducer.ts","dependencies":[{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.reducer.ts","mtime":1660603226739},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["var _this = this;\r\nimport * as tslib_1 from \"tslib\";\r\nimport axios from 'axios';\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { defaultValue } from 'app/shared/model/auto.model';\r\nexport var ACTION_TYPES = {\r\n    FETCH_AUTO_LIST: 'auto/FETCH_AUTO_LIST',\r\n    FETCH_AUTO: 'auto/FETCH_AUTO',\r\n    CREATE_AUTO: 'auto/CREATE_AUTO',\r\n    UPDATE_AUTO: 'auto/UPDATE_AUTO',\r\n    DELETE_AUTO: 'auto/DELETE_AUTO',\r\n    RESET: 'auto/RESET'\r\n};\r\nvar initialState = {\r\n    loading: false,\r\n    errorMessage: null,\r\n    entities: [],\r\n    entity: defaultValue,\r\n    updating: false,\r\n    updateSuccess: false\r\n};\r\n// Reducer\r\nexport default (function (state, action) {\r\n    if (state === void 0) { state = initialState; }\r\n    switch (action.type) {\r\n        case REQUEST(ACTION_TYPES.FETCH_AUTO_LIST):\r\n        case REQUEST(ACTION_TYPES.FETCH_AUTO):\r\n            return tslib_1.__assign({}, state, { errorMessage: null, updateSuccess: false, loading: true });\r\n        case REQUEST(ACTION_TYPES.CREATE_AUTO):\r\n        case REQUEST(ACTION_TYPES.UPDATE_AUTO):\r\n        case REQUEST(ACTION_TYPES.DELETE_AUTO):\r\n            return tslib_1.__assign({}, state, { errorMessage: null, updateSuccess: false, updating: true });\r\n        case FAILURE(ACTION_TYPES.FETCH_AUTO_LIST):\r\n        case FAILURE(ACTION_TYPES.FETCH_AUTO):\r\n        case FAILURE(ACTION_TYPES.CREATE_AUTO):\r\n        case FAILURE(ACTION_TYPES.UPDATE_AUTO):\r\n        case FAILURE(ACTION_TYPES.DELETE_AUTO):\r\n            return tslib_1.__assign({}, state, { loading: false, updating: false, updateSuccess: false, errorMessage: action.payload });\r\n        case SUCCESS(ACTION_TYPES.FETCH_AUTO_LIST):\r\n            return tslib_1.__assign({}, state, { loading: false, entities: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.FETCH_AUTO):\r\n            return tslib_1.__assign({}, state, { loading: false, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.CREATE_AUTO):\r\n        case SUCCESS(ACTION_TYPES.UPDATE_AUTO):\r\n            return tslib_1.__assign({}, state, { updating: false, updateSuccess: true, entity: action.payload.data });\r\n        case SUCCESS(ACTION_TYPES.DELETE_AUTO):\r\n            return tslib_1.__assign({}, state, { updating: false, updateSuccess: true, entity: {} });\r\n        case ACTION_TYPES.RESET:\r\n            return tslib_1.__assign({}, initialState);\r\n        default:\r\n            return state;\r\n    }\r\n});\r\nvar apiUrl = 'api/auto';\r\n// Actions\r\nexport var getEntities = function (page, size, sort) {\r\n    return ({\r\n        type: ACTION_TYPES.FETCH_AUTO_LIST,\r\n        payload: axios.get(apiUrl + \"?cacheBuster=\" + new Date().getTime())\r\n    });\r\n};\r\nexport var getEntity = function (id) {\r\n    var requestUrl = apiUrl + \"/\" + id;\r\n    return {\r\n        type: ACTION_TYPES.FETCH_AUTO,\r\n        payload: axios.get(requestUrl)\r\n    };\r\n};\r\nexport var createEntity = function (entity) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, dispatch({\r\n                    type: ACTION_TYPES.CREATE_AUTO,\r\n                    payload: axios.post(apiUrl, cleanEntity(entity))\r\n                })];\r\n            case 1:\r\n                result = _a.sent();\r\n                dispatch(getEntities());\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var updateEntity = function (entity) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0: return [4 /*yield*/, dispatch({\r\n                    type: ACTION_TYPES.UPDATE_AUTO,\r\n                    payload: axios.put(apiUrl, cleanEntity(entity))\r\n                })];\r\n            case 1:\r\n                result = _a.sent();\r\n                dispatch(getEntities());\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var deleteEntity = function (id) { return function (dispatch) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n    var requestUrl, result;\r\n    return tslib_1.__generator(this, function (_a) {\r\n        switch (_a.label) {\r\n            case 0:\r\n                requestUrl = apiUrl + \"/\" + id;\r\n                return [4 /*yield*/, dispatch({\r\n                        type: ACTION_TYPES.DELETE_AUTO,\r\n                        payload: axios.delete(requestUrl)\r\n                    })];\r\n            case 1:\r\n                result = _a.sent();\r\n                dispatch(getEntities());\r\n                return [2 /*return*/, result];\r\n        }\r\n    });\r\n}); }; };\r\nexport var reset = function () { return ({\r\n    type: ACTION_TYPES.RESET\r\n}); };\r\n",{"version":3,"file":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.reducer.ts","sourceRoot":"","sources":["C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\entities\\auto\\auto.reducer.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction\n} from 'react-jhipster';\n\nimport { cleanEntity } from 'app/shared/util/entity-utils';\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\n\nimport { IAuto, defaultValue } from 'app/shared/model/auto.model';\n\nexport const ACTION_TYPES = {\n  FETCH_AUTO_LIST: 'auto/FETCH_AUTO_LIST',\n  FETCH_AUTO:  'auto/FETCH_AUTO',\n  CREATE_AUTO: 'auto/CREATE_AUTO',\n  UPDATE_AUTO: 'auto/UPDATE_AUTO',\n  DELETE_AUTO: 'auto/DELETE_AUTO',\n  RESET: 'auto/RESET'\n};\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: [] as ReadonlyArray<IAuto>,\n  entity: defaultValue,\n  updating: false,\n  updateSuccess: false\n};\n\nexport type AutoState =  Readonly<typeof initialState>;\n\n// Reducer\n\nexport default (state: AutoState = initialState, action): AutoState => {\n  switch (action.type) {\n    case REQUEST(ACTION_TYPES.FETCH_AUTO_LIST):\n    case REQUEST(ACTION_TYPES.FETCH_AUTO):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        loading: true\n      };\n    case REQUEST(ACTION_TYPES.CREATE_AUTO):\n    case REQUEST(ACTION_TYPES.UPDATE_AUTO):\n    case REQUEST(ACTION_TYPES.DELETE_AUTO):\n      return {\n        ...state,\n        errorMessage: null,\n        updateSuccess: false,\n        updating: true\n      };\n    case FAILURE(ACTION_TYPES.FETCH_AUTO_LIST):\n    case FAILURE(ACTION_TYPES.FETCH_AUTO):\n    case FAILURE(ACTION_TYPES.CREATE_AUTO):\n    case FAILURE(ACTION_TYPES.UPDATE_AUTO):\n    case FAILURE(ACTION_TYPES.DELETE_AUTO):\n      return {\n        ...state,\n        loading: false,\n        updating: false,\n        updateSuccess: false,\n        errorMessage: action.payload\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_AUTO_LIST):\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.FETCH_AUTO):\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.CREATE_AUTO):\n    case SUCCESS(ACTION_TYPES.UPDATE_AUTO):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: action.payload.data\n      };\n    case SUCCESS(ACTION_TYPES.DELETE_AUTO):\n      return {\n        ...state,\n        updating: false,\n        updateSuccess: true,\n        entity: {}\n      };\n    case ACTION_TYPES.RESET:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\nconst apiUrl = 'api/auto';\n\n// Actions\n\nexport const getEntities: ICrudGetAllAction<IAuto> = (page, size, sort) =>\n({\n  type: ACTION_TYPES.FETCH_AUTO_LIST,\n  payload: axios.get<IAuto>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\n});\n\nexport const getEntity: ICrudGetAction<IAuto> = id => {\n  const requestUrl = `${apiUrl}/${id}`;\n  return {\n    type: ACTION_TYPES.FETCH_AUTO,\n    payload: axios.get<IAuto>(requestUrl)\n  };\n};\n\nexport const createEntity: ICrudPutAction<IAuto> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.CREATE_AUTO,\n    payload: axios.post(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const updateEntity: ICrudPutAction<IAuto> = entity => async dispatch => {\n  const result = await dispatch({\n    type: ACTION_TYPES.UPDATE_AUTO,\n    payload: axios.put(apiUrl, cleanEntity(entity))\n  });\n  dispatch(getEntities());\n  return result;\n};\n\nexport const deleteEntity: ICrudDeleteAction<IAuto> = id => async dispatch => {\n  const requestUrl = `${apiUrl}/${id}`;\n  const result = await dispatch({\n    type: ACTION_TYPES.DELETE_AUTO,\n    payload: axios.delete(requestUrl)\n  });\n  dispatch(getEntities());\n  return result;\n};\n\n\nexport const reset = () => ({\n  type: ACTION_TYPES.RESET\n});\n"]}]}