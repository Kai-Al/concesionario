{"remainingRequest":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\modules\\administration\\logs\\logs.tsx","dependencies":[{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\modules\\administration\\logs\\logs.tsx","mtime":1660603224926},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Translate } from 'react-jhipster';\r\nimport { getLoggers, changeLogLevel } from '../administration.reducer';\r\nvar LogsPage = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LogsPage, _super);\r\n    function LogsPage() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            filter: ''\r\n        };\r\n        _this.getLogs = function () {\r\n            if (!_this.props.isFetching) {\r\n                _this.props.getLoggers();\r\n            }\r\n        };\r\n        _this.changeLevel = function (loggerName, level) { return function () {\r\n            _this.props.changeLogLevel(loggerName, level);\r\n        }; };\r\n        _this.setFilter = function (evt) {\r\n            _this.setState({\r\n                filter: evt.target.value\r\n            });\r\n        };\r\n        _this.getClassName = function (level, check, className) { return level === check ? \"btn btn-sm btn-\" + className : 'btn btn-sm btn-light'; };\r\n        _this.filterFn = function (l) { return l.name.toUpperCase().includes(_this.state.filter.toUpperCase()); };\r\n        return _this;\r\n    }\r\n    LogsPage.prototype.componentDidMount = function () {\r\n        this.props.getLoggers();\r\n    };\r\n    LogsPage.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, logs = _a.logs, isFetching = _a.isFetching;\r\n        var filter = this.state.filter;\r\n        var loggers = logs ? logs.loggers : [];\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(\"h2\", { className: \"logs-page-heading\" },\r\n                React.createElement(Translate, { contentKey: \"logs.title\" }, \"Logs\")),\r\n            React.createElement(\"p\", null,\r\n                React.createElement(Translate, { contentKey: \"logs.nbloggers\", interpolate: { total: loggers.length } },\r\n                    \"There are \",\r\n                    loggers.length.toString(),\r\n                    \" loggers.\")),\r\n            React.createElement(\"span\", null,\r\n                React.createElement(Translate, { contentKey: \"logs.filter\" }, \"Filter\")),\r\n            React.createElement(\"input\", { type: \"text\", value: filter, onChange: this.setFilter, className: \"form-control\", disabled: isFetching }),\r\n            React.createElement(\"table\", { className: \"table table-sm table-striped table-bordered\" },\r\n                React.createElement(\"thead\", null,\r\n                    React.createElement(\"tr\", { title: \"click to order\" },\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(\"span\", null,\r\n                                React.createElement(Translate, { contentKey: \"logs.table.name\" }, \"Name\"))),\r\n                        React.createElement(\"th\", null,\r\n                            React.createElement(\"span\", null,\r\n                                React.createElement(Translate, { contentKey: \"logs.table.level\" }, \"Level\"))))),\r\n                React.createElement(\"tbody\", null, loggers.filter(this.filterFn).map(function (logger, i) {\r\n                    return React.createElement(\"tr\", { key: \"log-row-\" + i },\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(\"small\", null, logger.name)),\r\n                        React.createElement(\"td\", null,\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'TRACE'), className: _this.getClassName(logger.level, 'TRACE', 'primary') }, \"TRACE\"),\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'DEBUG'), className: _this.getClassName(logger.level, 'DEBUG', 'success') }, \"DEBUG\"),\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'INFO'), className: _this.getClassName(logger.level, 'INFO', 'info') }, \"INFO\"),\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'WARN'), className: _this.getClassName(logger.level, 'WARN', 'warning') }, \"WARN\"),\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'ERROR'), className: _this.getClassName(logger.level, 'ERROR', 'danger') }, \"ERROR\"),\r\n                            React.createElement(\"button\", { disabled: isFetching, onClick: _this.changeLevel(logger.name, 'OFF'), className: _this.getClassName(logger.level, 'OFF', 'secondary') }, \"OFF\")));\r\n                })))));\r\n    };\r\n    return LogsPage;\r\n}(React.Component));\r\nexport { LogsPage };\r\nvar mapStateToProps = function (_a) {\r\n    var administration = _a.administration;\r\n    return ({\r\n        logs: administration.logs,\r\n        isFetching: administration.loading\r\n    });\r\n};\r\nvar mapDispatchToProps = { getLoggers: getLoggers, changeLogLevel: changeLogLevel };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogsPage);\r\n",{"version":3,"file":"C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\modules\\administration\\logs\\logs.tsx","sourceRoot":"","sources":["C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\node_modules\\tslint-loader\\index.js!C:\\Users\\kaiki\\Documents\\NetBeansProjects\\concesionario\\src\\main\\webapp\\app\\modules\\administration\\logs\\logs.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-jhipster';\n\nimport { getLoggers, changeLogLevel } from '../administration.reducer';\nimport { IRootState } from 'app/shared/reducers';\n\nexport interface ILogsPageProps extends StateProps, DispatchProps {}\n\nexport interface ILogsPageState {\n  filter: string\n}\n\nexport class LogsPage extends React.Component<ILogsPageProps, ILogsPageState> {\n\n  state: ILogsPageState = {\n    filter: ''\n  };\n\n  componentDidMount() {\n    this.props.getLoggers();\n  }\n\n  getLogs = () => {\n    if (!this.props.isFetching) {\n      this.props.getLoggers();\n    }\n  }\n\n  changeLevel = (loggerName, level) => () => {\n    this.props.changeLogLevel(loggerName, level);\n  }\n\n  setFilter = evt => {\n    this.setState({\n      filter: evt.target.value\n    });\n  }\n\n  getClassName = (level, check, className) => level === check ? `btn btn-sm btn-${className}` : 'btn btn-sm btn-light';\n\n  filterFn = l => l.name.toUpperCase().includes(this.state.filter.toUpperCase());\n\n  render() {\n    const { logs, isFetching } = this.props;\n    const { filter } = this.state;\n    const loggers = logs ? logs.loggers : [];\n    return (\n        <div>\n          <h2 className=\"logs-page-heading\"><Translate contentKey=\"logs.title\">Logs</Translate></h2>\n          <p><Translate contentKey=\"logs.nbloggers\" interpolate={{ total: loggers.length }}>There are {loggers.length.toString()} loggers.</Translate></p>\n\n          <span><Translate contentKey=\"logs.filter\">Filter</Translate></span>\n          <input type=\"text\" value={filter} onChange={this.setFilter} className=\"form-control\" disabled={isFetching} />\n\n          <table className=\"table table-sm table-striped table-bordered\" >\n            <thead>\n              <tr title=\"click to order\">\n                <th><span><Translate contentKey=\"logs.table.name\">Name</Translate></span></th>\n                <th><span><Translate contentKey=\"logs.table.level\">Level</Translate></span></th>\n              </tr>\n            </thead>\n            <tbody>\n              {\n              loggers.filter(this.filterFn).map((logger, i) =>\n                <tr key={`log-row-${i}`}>\n                  <td><small>{logger.name}</small></td>\n                  <td>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'TRACE')} className={this.getClassName(logger.level, 'TRACE', 'primary')}>TRACE</button>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'DEBUG')} className={this.getClassName(logger.level, 'DEBUG', 'success')}>DEBUG</button>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'INFO')} className={this.getClassName(logger.level, 'INFO', 'info')}>INFO</button>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'WARN')} className={this.getClassName(logger.level, 'WARN', 'warning')}>WARN</button>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'ERROR')} className={this.getClassName(logger.level, 'ERROR', 'danger')}>ERROR</button>\n                    <button disabled={isFetching} onClick={this.changeLevel(logger.name, 'OFF')} className={this.getClassName(logger.level, 'OFF', 'secondary')}>OFF</button>\n                  </td>\n                </tr>\n              )\n            }\n            </tbody>\n          </table>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ administration }: IRootState) => ({\n  logs: administration.logs,\n  isFetching: administration.loading\n});\n\nconst mapDispatchToProps = { getLoggers, changeLogLevel };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogsPage);\n"]}]}